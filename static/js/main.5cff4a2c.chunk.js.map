{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","inputText","setTodos","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoFromLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cff4a2c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, inputText, setTodos, setStatus}) => {\r\n  // ...\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    //prevent refresh of page\r\n    e.preventDefault();\r\n\r\n    //Create obj\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n  \r\n  const statusHandler = (e) => {\r\n      //console.log(e.target.value);\r\n      setStatus(e.target.value);\r\n  };\r\n  return (\r\n    <form>\r\n      <input\r\n        onChange={inputTextHandler}\r\n        value={inputText}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"complete\">Complete</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, setTodos, todos, todo }) => {\r\n  //Events\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item; //catch all\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\n\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            text={todo.text}\r\n            key={todo.id}\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            todo={todo}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\n//import componenets\r\nimport Form from \"./components/Form\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nfunction App() {\r\n  //State stuff\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  //useEffects\r\n  //Run once when app starts\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n  //Run Multiple times\r\n  useEffect(() => {\r\n    //console.log(\"useEffect Logged\");\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n  //function\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"complete\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\r\n        break;\r\n      case \"uncompleted\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n        break;\r\n    }\r\n  };\r\n\r\n  //Save to local storage\r\n  const saveLocalTodos = () => {\r\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n  //Load from local storage\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      //Save to local storage as JSON\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      //Parse JSON and set to todos var for display\r\n      let todoFromLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoFromLocal);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>The Great Todo List!</h1>\r\n      </header>\r\n      <Form\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        setStatus={setStatus}\r\n      />\r\n      <TodoList\r\n        setTodos={setTodos}\r\n        todos={todos}\r\n        filteredTodos={filteredTodos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}