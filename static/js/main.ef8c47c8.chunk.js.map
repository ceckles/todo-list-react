{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","inputText","setTodos","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoFromLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef8c47c8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ setInputText, todos, inputText, setTodos, setStatus}) => {\n  // ...\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitTodoHandler = (e) => {\n    //prevent refresh of page\n    e.preventDefault();\n\n    //Create obj\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random() * 1000 },\n    ]);\n    setInputText(\"\");\n  };\n  \n  const statusHandler = (e) => {\n      //console.log(e.target.value);\n      setStatus(e.target.value);\n  };\n  return (\n    <form>\n      <input\n        onChange={inputTextHandler}\n        value={inputText}\n        type=\"text\"\n        className=\"todo-input\"\n      />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"complete\">Complete</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Todo = ({ text, setTodos, todos, todo }) => {\n  //Events\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item; //catch all\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n        {text}\n      </li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\n\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            text={todo.text}\n            key={todo.id}\n            setTodos={setTodos}\n            todos={todos}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n//import componenets\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //State stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //useEffects\n  //Run once when app starts\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  //Run Multiple times\n  useEffect(() => {\n    //console.log(\"useEffect Logged\");\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //function\n  const filterHandler = () => {\n    switch (status) {\n      case \"complete\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  //Save to local storage\n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  //Load from local storage\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      //Save to local storage as JSON\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      //Parse JSON and set to todos var for display\n      let todoFromLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoFromLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>The Great Todo List!</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        setTodos={setTodos}\n        todos={todos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}